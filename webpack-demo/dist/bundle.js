!function(e){var t={};function r(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(o,i,function(t){return e[t]}.bind(null,i));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);var o=new(function(){function e(e,t){this.rows=[],this.width=e,this.height=t;for(var r=0;r<t;r++){for(var o=[],i=0;i<e;i++)o.push({bomb:!1,revealed:!1});this.rows.push(o)}}return e.prototype.getCell=function(e,t){return t>=0&&t<this.height&&e>=0&&e<this.width?this.rows[t][e]:{bomb:!1,revealed:!1}},e.prototype.placeMines=function(e){for(var t=0;t<e;t++){var r=Math.floor(Math.random()*this.width),o=Math.floor(Math.random()*this.height);this.rows[o][r].bomb=!0}},e.prototype.countBombNeighbours=function(e,t){return this.getCell(e,t-1).bomb+this.getCell(e,t+1).bomb+this.getCell(e-1,t).bomb+this.getCell(e+1,t).bomb+this.getCell(e-1,t-1).bomb+this.getCell(e+1,t+1).bomb+this.getCell(e+1,t-1).bomb+this.getCell(e-1,t+1).bomb},e.prototype.isRevealedZero=function(e,t){return this.getCell(e,t).revealed&&0==this.countBombNeighbours(e,t)},e.prototype.isNeighborZero=function(e,t){for(var r=-1;r<=1;r++)for(var o=-1;o<=1;o++)if((0!=o||0!=r)&&this.isRevealedZero(e+o,t+r))return!0;return!1},e.prototype.infectZeroes=function(){var e;do{e=0;for(var t=0;t<this.height;t++)for(var r=0;r<this.width;r++)this.getCell(r,t).revealed||this.isNeighborZero(r,t)&&(this.getCell(r,t).revealed=!0,e+=1)}while(e>0)},e.prototype.isBombed=function(){for(var e=0;e<this.height;e++)for(var t=0;t<this.width;t++)if(this.rows[e][t].bomb&&this.rows[e][t].revealed)return!0;return!1},e.prototype.render=function(){for(var e=[],t=0;t<this.height;t++){for(var r=[],o=0;o<this.width;o++)this.rows[t][o].revealed?this.rows[t][o].bomb?r.push("B"):r.push(this.countBombNeighbours(o,t)):r.push("_");e.push(r.join("|"))}console.log(e.join("\n"))},e}())(10,10);o.placeMines(10),console.log("KAABOOM!...game over"),o.render()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,